package com.zjhc.sgsb.controller;


import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import com.zjhc.sgsb.common.InterfaceResult;
import com.zjhc.sgsb.entity.ResourceCatalog;
import com.zjhc.sgsb.entity.UserInfo;
import com.zjhc.sgsb.service.IResourceCatalogService;
import com.zjhc.sgsb.service.IUserInfoService;
import io.swagger.annotations.ApiOperation;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestMapping;

import org.springframework.web.bind.annotation.RestController;
import com.zjhc.sgsb.controller.BaseController;

import java.util.List;

/**
 * <p>
 *  前端控制器
 * </p>
 *
 * @author wusj
 * @since 2020-04-19
 */
@RestController
@RequestMapping("/sgsb/resource-catalog")
public class ResourceCatalogController extends BaseController {

    private Logger logger = LoggerFactory.getLogger(this.getClass());

    @Autowired
    private IResourceCatalogService resourceCatalogService;
    @Autowired
    private IUserInfoService userInfoService;

    @ApiOperation(value="根据部门code获取资源")
    @RequestMapping(value = "list_resource_catalog")
    public InterfaceResult<List<ResourceCatalog>> listResourceCatalog(String token,ResourceCatalog catalog,Integer pageIndex,Integer pageSize){
        if (! userInfoService.authentication(token).issuccess()){
            return InterfaceResult.getError("请先登录");
        }
        Page<ResourceCatalog> page = new Page<>(pageIndex,pageSize);
        return resourceCatalogService.listResourceCatalog(catalog,page);
    }

    @ApiOperation(value="创建资源")
    @RequestMapping(value = "add_resource_catalog")
    public InterfaceResult<ResourceCatalog> addResourceCatalog(String token,ResourceCatalog catalog){
        InterfaceResult<UserInfo> authentication = userInfoService.authentication(token);
        if (! authentication.issuccess()){
            return InterfaceResult.getError("请先登录");
        }
        return resourceCatalogService.addResourceCatalog(authentication.getData(),catalog);
    }

    @ApiOperation(value="修改资源")
    @RequestMapping(value = "update_resource_catalog")
    public InterfaceResult<ResourceCatalog> updateResourceCatalog(String token,ResourceCatalog catalog){
        InterfaceResult<UserInfo> authentication = userInfoService.authentication(token);
        if (! authentication.issuccess()){
            return InterfaceResult.getError("请先登录");
        }
        return resourceCatalogService.updateResourceCatalog(authentication.getData(),catalog);
    }


}
