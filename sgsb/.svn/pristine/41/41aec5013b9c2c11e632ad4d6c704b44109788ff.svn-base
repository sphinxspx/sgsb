package com.zjhc.sgsb.controller;


import com.zjhc.sgsb.common.InterfaceResult;
import com.zjhc.sgsb.entity.CatalogTemplate;
import com.zjhc.sgsb.entity.ResourceCatalog;
import com.zjhc.sgsb.entity.UserInfo;
import com.zjhc.sgsb.service.ICatalogTemplateService;
import com.zjhc.sgsb.service.IUserInfoService;
import io.swagger.annotations.ApiOperation;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpRequest;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.RequestMapping;

import org.springframework.web.bind.annotation.RestController;
import com.zjhc.sgsb.controller.BaseController;
import org.springframework.web.multipart.MultipartFile;

import javax.servlet.http.HttpServletResponse;
import java.io.IOException;
import java.util.List;

/**
 * <p>
 * 信息目录模板字段 前端控制器
 * </p>
 *
 * @author wusj
 * @since 2020-04-22
 */
@CrossOrigin
@RestController
@RequestMapping("/sgsb/catalog-template")
public class CatalogTemplateController extends BaseController {

    private Logger logger = LoggerFactory.getLogger(this.getClass());

    @Autowired
    private ICatalogTemplateService catalogTemplateService;
    @Autowired
    private IUserInfoService userInfoService;

    @ApiOperation(value="用户定义模板字段保存:页面输入字段")
    @RequestMapping(value = "add_catalog_template_page")
    public InterfaceResult<String> addCatalogTemplatePage(String token,List<CatalogTemplate> catalogTemplateList) {
        InterfaceResult<UserInfo> authentication = userInfoService.authentication(token);
        if (!authentication.issuccess()){
            return InterfaceResult.getError(authentication.getMsg());
        }
        UserInfo userInfo = authentication.getData();
        return catalogTemplateService.addCatalogTemplatePage(userInfo,catalogTemplateList);
    }

    @ApiOperation(value="用户定义模板字段保存:excel解析")
    @RequestMapping(value = "add_catalog_template_excel")
    public InterfaceResult<String> addCatalogTemplateExcel(MultipartFile file) throws IOException{
        String token = "eyJjcmVhdGVUaW1lIjoiMjAyMC0wNC0yMFQxMzo1ODowMCIsImRlcHRDb2RlIjoiYWRtaW5pc3RyYXRvciIsImRlcHROYW1l" +
                "Ijoi6LaF57qn566h55CG5ZGYIiwiaWQiOjEsImlzRGVsZXRlIjoxLCJpc1N1cGVyVXNlciI6MSwib3JkZXJieSI6OTksInBhc3N3b3J" +
                "kIjoiZTEwYWRjMzk0OWJhNTlhYmJlNTZlMDU3ZjIwZjg4M2UiLCJ1c2VybmFtZSI6ImFkbWluIn0=";
        InterfaceResult<UserInfo> authentication = userInfoService.authentication(token);
        if (!authentication.issuccess()){
            return InterfaceResult.getError(authentication.getMsg());
        }
        UserInfo userInfo = authentication.getData();
        return catalogTemplateService.addCatalogTemplateExcel(userInfo,file);
    }

    @ApiOperation(value="下载模板")
    @RequestMapping(value = "upload_template")
    public InterfaceResult<byte[]> uploadTemplate(String token, ResourceCatalog catalog, HttpServletResponse response) throws IOException {
        InterfaceResult<UserInfo> authentication = userInfoService.authentication(token);
        if (!authentication.issuccess()){
            return InterfaceResult.getError(authentication.getMsg());
        }
//        UserInfo userInfo = authentication.getData();
        return catalogTemplateService.uploadTemplate(catalog,response);
    }

}
